<div class="general-visual">
  <div class="container">
    <div class="row">
      <div class="col-9 mt-5">
        <%= render "posts/errors", obj:@user_prefecture %>
        <h1 class="border-bottom border-danger mb-3">ユーザー情報の編集</h1>
        <span>住んだことのある県(更新前)：</span>
        <% current_user.find_prefectures("livepast").each do |pref_live_past| %>
          <%= pref_live_past.prefecture_name %>
        <% end %>
        <br>
        <br>
        <span>住んでみたい県(更新前)：</span>
        <% current_user.find_prefectures("livefuture").each do |pref_live_future| %>
          <%= pref_live_future.prefecture_name %>
        <% end %>
        <div class="d-flex">
          <div class="mt-3">
            <%= render partial: "user_prefecture_form", locals: {user_prefecture: @user_prefecture} %>
          </div>
          <div id="japan-map" class="my-5"></div>
        </div>
      </div>
      <div class="col-3 mt-5">
        <%= render partial: "users/sidebar" %>
      </div>
    </div>
  </div>
</div>

<script>
  var temp_array_live_past = [];
  var temp_array_live_future = [];
  var prefecture_data = [];

  <% current_user.find_prefectures("livepast").each_with_index do |pref_live_past, x| %>
    temp_array_live_past[<%= x %>] = <%= pref_live_past.prefecture_id %>;
  <% end %>

  <% current_user.find_prefectures("livefuture").each_with_index do |pref_live_future, x| %>
    temp_array_live_future[<%= x %>] = <%= pref_live_future.prefecture_id %>;
  <% end %>

  for (let i=0;i<=46;i++) {
    if (temp_array_live_past.includes(i)) {
      prefecture_data[i] = 0;
      continue;
    } else if (temp_array_live_future.includes(i)) {
      prefecture_data[i] = 1;
      continue;
    } else {
      prefecture_data[i] = 0.5;
    }
  }

  // ヒートマップで表現する数値データを定義している部分
  function defineData(){
    const data = {
      "prefectures" : prefecture_data
    }
    return data
  }

  // 表示する色を作っている部分
  function prefecturesConvertRGB(prefecture){
    function heatMapColorforValue(value){
      var h = (1.0 - value) * 180
      return "hsl(" + h + ", 70%, 60%)";
    }
    return heatMapColorforValue(prefecture)
  }

  // {"code": ... , "color": ...}のjsonオブジェクトの配列を作成している部分
  function defineAreas(data){
    let areas = []
    const prefectures = data.prefectures
    for (let i=1;i<=47;i++) {
      areas.push(
        {
          "code": i,
          "color": prefecturesConvertRGB(prefectures[i-1])
        }
      )
    }
    return areas
  }

  // ヒートマップを表示する部分
  function main(){
    const data = defineData()
    const areas = defineAreas(data)

    const d = new jpmap.japanMap(document.getElementById("japan-map"), {
      width: 500,
      selection: "prefecture",
      areas: areas,
      borderLineWidth : 0.25,
      lineColor : "#a0a0a0",
      lineWidth: 1,
      drawsBoxLine: false,
      showsPrefectureName: false,
      movesIslands : true
    });
  }

  main()
</script>
